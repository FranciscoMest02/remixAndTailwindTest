{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/components/MainNavigation.tsx", "../app/routes/nasaImages.tsx", "../app/routes/_index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/docs/en/main/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport MainNavigation from '~/components/MainNavigation'\nimport stylesheet from \"~/tailwind.css\"\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <header>\n        <MainNavigation/>\n      </header>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n\nexport const links: any = () => [\n  { rel: \"stylesheet\", href: stylesheet },\n];", "import { NavLink } from \"@remix-run/react\";\r\n\r\nfunction NavigationBar() {\r\n    return(\r\n        <nav className=\"mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8\">\r\n            <NavLink to='/' className={\"bg-gray-900 text-white rounded-md px-3 py-2 text-sm font-medium\"}>Home</NavLink>\r\n            <NavLink to='/nasaImages' className={\"bg-gray-900 text-white rounded-md px-3 py-2 text-sm font-medium\"}>Nasa images</NavLink>\r\n        </nav>\r\n    );\r\n} \r\n\r\nexport default NavigationBar;", "import { useLoaderData } from \"@remix-run/react\";\r\n\r\nclass NasaImage{\r\n    id: number;\r\n    img_src: string;\r\n    earth_date: string;\r\n\r\n    constructor({ id, img, date }: any) {\r\n        this.id = id;\r\n        this.img_src = img;\r\n        this.earth_date = date;\r\n    }\r\n}\r\n\r\nexport default function NasaImagesPAge() {\r\n    const images = useLoaderData()\r\n    //console.log(images)\r\n    return(\r\n        <>\r\n            <h1 className=\"text-3xl font-bold\">Imagenes de la api</h1>\r\n            \r\n            {images.map((image:any) => (\r\n                <div key={image.id} className=\"flex max-w-xl flex-col items-start justify-between border-8\">\r\n                    <p>Fecha de la imagen</p>\r\n                    <p>{image.earth_date}</p>\r\n                    <img src={image.img_src}/>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n} \r\n\r\nexport async function loader(){\r\n    try {\r\n\t\tconst res = await fetch(`https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=1000&page=2&api_key=DEMO_KEY`);\r\n\t\tconst data = await res.json();\r\n\t\t//console.log(data);\r\n        return data['photos'];\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}", "import type { V2_MetaFunction } from \"@remix-run/react\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: \"New Remix App\" }];\n};\n\nexport default function Index() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n        <h1 className=\"text-3xl font-bold underline\">Mi primera pagina en remix</h1>\n        <p>Aqui se presenta mi primera p\u00E1gina hecha con remix.js, se consumir\u00E1 una API y se utilizaran componentes para mostrar esa informaci\u00F3n</p>\n        <p>Dando click en el texto de arba tambien se puede ir a la otra pagina, donde se carga la informacion de la API</p>\n    </div>\n  );\n}", "export default {'version':'2721929c','entry':{'module':'/build/entry.client-ZMEPF625.js','imports':['/build/_shared/chunk-3TJGYOTQ.js','/build/_shared/chunk-EETRBLDB.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-LCBVA3V3.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-RQVRSHBP.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/nasaImages':{'id':'routes/nasaImages','parentId':'root','path':'nasaImages','index':undefined,'caseSensitive':undefined,'module':'/build/routes/nasaImages-AFYNR4OL.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/build/manifest-2721929C.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\panch\\\\Documents\\\\Uni mty local\\\\Sexto semestre\\\\Planeacion de sistemas de software\\\\Web\\\\Practica de remix\\\\pruebasRemix\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/nasaImages.tsx\";\nimport * as route2 from \"./routes/_index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":true,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/nasaImages\": {\n      id: \"routes/nasaImages\",\n      parentId: \"root\",\n      path: \"nasaImages\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime"]
}
